as.double(TD$p.value), as.double(round(TD[1]$statistic[1],4)),
round(qt(0.975, TD$parameter[1]),4), round(TD$conf.int[1],4), round(TD$conf.int[2],4))
TData[nrow(TData)+1,] <- RD}}
View(TData)
TData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.value(rounded)=double(),
ComputedT=double(), TabValueT=double(), CI95Lower=double(),
CI95Upper=double(), stringsAsFactors = F)
View(TData)
for (i in 1:5) {
for (j in (i+1):6) {
TD <- t.test(splitData[[i]]$len, splitData[[j]]$len, var.equal = T)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(TD$p.value,6)), as.double(round(TD[1]$statistic[1],4)),
round(qt(0.975, TD$parameter[1]),4), round(TD$conf.int[1],4), round(TD$conf.int[2],4))
TData[nrow(TData)+1,] <- RD}}
View(TData)
TData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.value(rounded)=double(),
ComputedT=double(), TabValueT=double(), CI95Lower=double(),
CI95Upper=double(), stringsAsFactors = F)
rm(TData)
TData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.value(rounded)=double(),
ComputedT=double(), TabValueT=double(), CI95Lower=double(),
CI95Upper=double(), stringsAsFactors = F)
TData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.valueRounded=double(),
ComputedT=double(), TabValueT=double(), CI95Lower=double(),
CI95Upper=double(), stringsAsFactors = F)
for (i in 1:5) {
for (j in (i+1):6) {
TD <- t.test(splitData[[i]]$len, splitData[[j]]$len, var.equal = T)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(TD$p.value,6)), as.double(round(TD[1]$statistic[1],4)),
round(qt(0.975, TD$parameter[1]),4), round(TD$conf.int[1],4), round(TD$conf.int[2],4))
TData[nrow(TData)+1,] <- RD}}
View(TData)
for (i in 1:5) {
for (j in (i+1):6) {
TD <- t.test(splitData[[i]]$len, splitData[[j]]$len, var.equal = T)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(TD$p.value,6)), as.double(round(TD[1]$statistic[1],4)),
round(qt(0.025, TD$parameter[1]),4), round(TD$conf.int[1],4), round(TD$conf.int[2],4))
TData[nrow(TData)+1,] <- RD}}
View(TData)
rm(TData)
TD <- NULL
RD <- NULL
TData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.valueRounded=double(),
CI95Lower=double(), CI95Upper=double(), stringsAsFactors = F)
for (i in 1:5) {
for (j in (i+1):6) {
TD <- t.test(splitData[[i]]$len, splitData[[j]]$len, var.equal = T)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(TD$p.value,6)), round(TD$conf.int[1],4), round(TD$conf.int[2],4))
TData[nrow(TData)+1,] <- RD}}
View(TData)
View(toothData)
splitData <- split(ToothGrowth, list(ToothGrowth$supp, ToothGrowth$dose))
splitData[4]
splitData[4]=splitData[4][-5,]
splitData[[4]]=splitData[[4][-5,]
splitData[[4]]=splitData[[4]][-5,]
splitData[4]
rm(VarData)
VD <- NULL
VarData <- data.frame(Supplement1=character(), Dosage1=character(),
Supplement2=character(), Dosage2=character(), p.value=double(),
ComputedF=double(), TabValueF=double(), stringsAsFactors = F)
for (i in 1:3) {
for (j in 4) {
VD <- var.test(splitData[[i]]$len, splitData[[j]]$len)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(VD$p.value,4)), as.double(round(VD[1]$statistic[1],4)),
round(qf(0.95, VD$parameter[1] , VD$parameter[2]),4))
VarData[nrow(VarData)+1,] <- RD}}
for (i in 4) {
for (j in 5:6) {
VD <- var.test(splitData[[i]]$len, splitData[[j]]$len)
RD <- c(as.character(splitData[[i]]$supp[1]), as.character(splitData[[i]]$dose[1]),
as.character(splitData[[j]]$supp[1]), as.character(splitData[[j]]$dose[1]),
as.double(round(VD$p.value,4)), as.double(round(VD[1]$statistic[1],4)),
round(qf(0.95, VD$parameter[1] , VD$parameter[2]),4))
VarData[nrow(VarData)+1,] <- RD}}
View(VarData)
install.packages("class")
install.packages(c("foreign", "MASS", "nlme", "nnet", "spatial", "stringi"))
library(swirl)
install.packages("swirl")
library(swirl)
swirl
swirl()
install.packages("swirl", dependencies = T)
install.packages("swirl", dependencies = T)
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
.64
.64
mypdf
?mypdf
mypdf(1.6)
integrate(mypdf,0,1.6)
integrate(mypdf,0,2)/2
integrate(mypdf,0,2)
.5
sqrt(2)
=99.7*.001
99.7*.001
.997*.001
.999*.015
.997*.001/(.999*.015 +.997*.001)
21/36
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(samole(0:1,10000,T),1000),1,mean))
sd(apply(matrix(sample(0:1,10000,T),1000),1,mean))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
.8^6
for (i in 3:5){choose(5,i)*(.8)^i*(.2)^(5-i)}
a<-for (i in 3:5){choose(5,i)*(.8)^i*(.2)^(5-i)}
a
choose(5,3)*(.8)^3*(.2)^(5-3)+choose(5,4)*(.8)^4*(.2)^(5-4)+choose(5,5)*(.8)^5*(.2)^(5-5)
pbinom(2,5,.8,lower.tail = =F)
pbinom(2,5,.8,lower.tail =F)
pbinom(2,size=5,prob=.8,lower.tail =F)
pbinom(2,size=5,prob=.8,lower.tail =FALSE)
?qnorm
cars <- mtcars
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
?mtcars
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
summary(lm(y~x))
summary(lm(y~I(x-mean(x)))
)
summary(lm(cars$mpg ~ I(cars$wt - mean(cars$wt))))
summary(lm(cars$mpg ~ cars$wt))))
summary(lm(cars$mpg ~ cars$wt)))
summary(lm(cars$mpg ~ cars$wt)))
summary(lm(cars$mpg ~ cars$wt))
summary(lm(cars$mpg ~ 1))
summary(lm(cars$mpg ~ I(cars$wt - mean(cars$wt))))
fit <- (lm(cars$mpg ~ I(cars$wt - mean(cars$wt))))
confint(fit)
fit <- (lm(cars$mpg ~ cars$wt))
fit
?predict
predict(fit, new.data = data.frame(wt=3))
predict(fit, new.data = data.frame(cars$wt=3))
predict(fit, new.data = data.frame(wt=3))
coef(fit)[1] + coef(fit)[2]*3
confint(coef(fit)[1] + coef(fit)[2]*3)
predict(fit, newdata = data.frame(wt=3))
newx <- c(3)
predict(fit, newdata = data.frame(wt=newx))
newx <- c(3,4,5,6)
predict(fit, newdata = data.frame(wt=newx))
fit <- lm(mpg ~ wt, data = mtcars)
predict(fit, newdata = data.frame(wt = 3), interval = "prediction")
fit <- lm(mpg ~ wt, data = mtcars)
predict(fit, newdata = data.frame(wt = 3))
fit <- (lm(cars$mpg ~ cars$wt))
predict(fit, newdata = data.frame(wt = 3))
fit2 <- lm(mpg ~ wt, data = mtcars)
fit
fit2
predict(fit2, newdata = data.frame(wt = 3))
predict(fit, newdata = data.frame(wt = 3))
fit <- lm(mpg ~ wt, data = mtcars)
predict(fit, newdata = data.frame(wt = 3), interval = "prediction")
fit <- lm(mpg ~ I(wt/2), data = mtcars)
predict(fit, newdata = data.frame(wt = 1), interval = "prediction")
coeffit(fit)
confint(fit)
?lm
fit <- lm (mpg ~wt data=mtcars)
fit <- lm (mpg~wt data=mtcars)
fit <- lm(mpg~wt data=mtcars)
fit <- lm(mpg~wt, data=mtcars)
summary(fit)
fit <- lm(mpg~wt, data=mtcars, interept=0)
fit <- lm(mpg~1, data=mtcars, interept=0)
fit2 <- lm(mpg~1, data=mtcars)
fit/fit2
firt
fit
fit2
fit <- lm(mpg~wt, data=mtcars)
fit
summary(fit)
summary(fit2)
confint(lm(mpg~wt, data=mtcars))
confint(lm(mpg~I(wt-mean(wt), data=mtcars))
)
confint(lm(mpg~I(wt-mean(wt)), data=mtcars))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y~x))
summary(lm(mpg ~I(wt-mean(wt)),data=mtcars))
confint(summary(lm(mpg ~I(wt-mean(wt)),data=mtcars)))
confint((lm(mpg ~I(wt-mean(wt)),data=mtcars)))
fit <- lm (mpg~wt,data=mtcars)
predict(fit, newdata=data.frame(wt=3))
predict(fit, newdata=data.frame(wt=3),interval=predict())
predict(fit, newdata=data.frame(wt=3),interval=prediction)
predict(fit, newdata=data.frame(wt=3),interval="prediction")
confint(lm(mpg~wt/2,data=mtcars))
confint(lm(mpg~I(wt/2),data=mtcars))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit <-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit)
mtcars
summary(fit)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit)
data(mtcars)
fit2 <- lm(mpg ~ factor(cyl), data = mtcars)
summary(fit2)
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit)
fit_inter <- lm(mpg ~ factor(cyl) * wt, data = mtcars)
anova(fit, fit_inter, test = "Chisq")
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y ~ x)
hatvalues(fit5)
?hatvalues
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbeta(lm(y~x))
hatvalues((lm(y~x)))
dfbetas(lm(y~x))
mtcars
data(mtcars)
fit2 <- lm(mpg ~ factor(cyl), data = mtcars)
summary(fit2)
example(anscombe)
author("CLTApp")
install.packages(devtools)
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install_github("ramnathv/slidifyLibraries"")
install_github("ramnathv/slidifyLibraries")
install_github("ramnathv/slidify")
library(slidify)
author("CLTSlidifyPresentation")
getwd()
setwd("Users/Merrimans/Documents/GitHub/Coursera_DataProducts")
setwd("/Users/Merrimans/Documents/GitHub/Coursera_DataProducts")
author("CLTSlidifyPresentation")
## Slide 1
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim3 <- data.frame(x = rexp(1000, 0.2))
m3=mean(sim3$x)
sd3=sd(sim3$x)
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.3),
main=paste0("probability histogram of ", input$iterations, " exponentials"))
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red")
sim3 <- data.frame(x = rexp(1000, 0.2))
m3=mean(sim3$x)
sd3=sd(sim3$x)
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.3),
main=paste0("probability histogram of 1000 exponentials"))
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red")
abline(v=m3,col="red", lwd=4)
abline(v=m3,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/upperBound,3)), ylim=c(0, 2.5),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 2.5),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, 1.0),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, .75),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, .6),
main=paste0("probability histogram of the mean of 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/1000,3)), ylim=c(0, .6),
main=paste0("probability histogram of the mean \nof 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100)
#par(mfrow=c(1,3), mar=c(10,3,2,2), mgp=c(7,1,0))
sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x)
sd2 <- sd(sim2$x)
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/40,3)), ylim=c(0, .6),
main=paste0("probability histogram of the mean \nof 1000 means of 40 exponentials"))
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100); sim3 <- data.frame(x = rexp(1000, 0.2)); m3=mean(sim3$x); sd3=sd(sim3$x)
par(mfrow=c(2,1)) #, mar=c(4,2,6,2), mgp=c(3,1,0))
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.3),
main=paste0("probability histogram of 1000 exponentials"))
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red", lwd=3)
set.seed(100); sim3 <- data.frame(x = rexp(1000, 0.2)); m3=mean(sim3$x); sd3=sd(sim3$x)
par(mfrow=c(2,1)) #, mar=c(4,2,6,2), mgp=c(3,1,0))
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.3))
#,           main=paste0("probability histogram of 1000 exponentials"))
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red", lwd=3)
set.seed(100); sim3 <- data.frame(x = rexp(1000, 0.2)); m3=mean(sim3$x); sd3=sd(sim3$x)
par(mfrow=c(2,1)) #, mar=c(4,2,6,2), mgp=c(3,1,0))
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.3),main="")
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red", lwd=3)
set.seed(100); sim3 <- data.frame(x = rexp(1000, 0.2)); m3=mean(sim3$x); sd3=sd(sim3$x)
par(mfrow=c(2,1)) #, mar=c(4,2,6,2), mgp=c(3,1,0))
hist(sim3$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ",round(m3,2)," and theoretical mean = 5", "\nvariance = ",
round(sd3^2,3)," and theoretical variance = 25"), ylim=c(0, 0.2),main="")
curve(dnorm(x, mean=m3, sd=sd3), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m3,col="red", lwd=3)
set.seed(100); sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x); sd2 <- sd(sim2$x)
par(mfrow=c(2,1))
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/40,3)), ylim=c(0, .6)),main="")
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100); sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x); sd2 <- sd(sim2$x)
par(mfrow=c(2,1))
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3)," and theoretical variance = ",
round(25/40,3)), ylim=c(0, .6)),main="")
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
set.seed(100); sim2 <- data.frame(x = sapply(1:1000, function(x) {mean(rexp(40, 0.2))}))
m2 <- mean(sim2$x); sd2 <- sd(sim2$x)
par(mfrow=c(2,1))
hist(sim2$x, density=20, breaks=20, prob=TRUE,
xlab=paste0("mean = ", round(m2,3)," theoretical mean = 5", "\nvariance = ",
round(sd2^2,3), " and theoretical variance = ",
round(25/40,3)), ylim=c(0, .6), main="")
curve(dnorm(x, mean=m2, sd=sd2), col="darkblue", lwd=2, add=TRUE, yaxt="n")
abline(v=m2,col="red", lwd=3)
?manipulate
library(manipulate)
?manipulate
